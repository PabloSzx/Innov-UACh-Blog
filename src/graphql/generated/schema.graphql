### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly

type Blog {
  _id: ObjectId!
  content: String!
  createdAt: DateTime!
  lead: String
  title: String!
  updatedAt: DateTime!
  urlSlug: String!
}

input BlogCreate {
  content: String!
  lead: String
  title: String!
  urlSlug: String!
}

input BlogFilter {
  maxDate: DateTime
  minDate: DateTime
  urlSlug: String
}

type BlogNodes {
  nodes: [Blog!]!
  pageInfo: PageInfo!
}

enum BlogSortField {
  createdAt
  title
  updatedAt
  urlSlug
}

input BlogSortValue {
  direction: SortDirection!
  field: BlogSortField!
}

input BlogUpdate {
  _id: ObjectId!
  content: String!
  lead: String
  title: String!
  urlSlug: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  createBlog(blog: BlogCreate!): Blog!
  login(token: String!): Boolean!
  logout: Boolean!
  updateBlog(blog: BlogUpdate!): Blog
}

"""
Integers that will have a value of 0 or more.
"""
scalar NonNegativeInt

"""
Mongo object id scalar type
"""
scalar ObjectId

type PageInfo {
  """
  Helper to know if there is a next page based on filter, limit and skip
  """
  hasNextPage: Boolean!

  """
  Total amount of documents in the current page
  """
  pageCount: NonNegativeInt!

  """
  Total amount of documents available based on the filter
  """
  totalCount: NonNegativeInt!

  """
  Total amount of pages based on the filter and limit
  """
  totalPages: NonNegativeInt!
}

input PaginationArgs {
  """
  Limit of documents on the page, the maximum is 50
  """
  limit: PositiveInt = 5

  """
  Amount of documents to skip for the current page
  """
  skip: NonNegativeInt = 0
}

"""
Integers that will have a value greater than 0.
"""
scalar PositiveInt

type Query {
  blog(_id: ObjectId, slug: String): Blog
  blogList(
    filter: BlogFilter
    pagination: PaginationArgs = { limit: 5, skip: 0 }
    sort: [BlogSortValue!] = { direction: DESC, field: createdAt }
  ): BlogNodes!
  currentUser: Boolean!
  dateNow: DateTime!
  slugUrls: [String!]!
}

enum SortDirection {
  ASC
  DESC
}
